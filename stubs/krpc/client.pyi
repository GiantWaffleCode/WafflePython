from typing import Any, Optional

from krpc.Drawing import Drawing
from krpc.KRPC import KRPC
from krpc.SpaceCenter import SpaceCenter
from krpc.UI import UI


class Client:
    def __init__(self, rpc_connection: Any, stream_connection: Any) -> None: ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, typ: Any, value: Any, traceback: Any) -> None: ...
    def add_stream(self, func: Any, *args: Any, **kwargs: Any): ...
    def stream(self, func: Any, *args: Any, **kwargs: Any) -> None: ...
    @property
    def stream_update_condition(self): ...
    def wait_for_stream_update(self, timeout: Optional[Any] = ...) -> None: ...
    def add_stream_update_callback(self, callback: Any) -> None: ...
    def remove_stream_update_callback(self, callback: Any) -> None: ...
    @staticmethod
    def get_call(func: Any, *args: Any, **kwargs: Any): ...

    @property
    def space_center(self) -> SpaceCenter: ...
    @property
    def ui(self) -> UI: ...
    @property
    def drawing(self) -> Drawing: ...
    @property
    def krpc(self) -> KRPC: ...